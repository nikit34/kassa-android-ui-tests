# ssh npermyakov@10.60.21.50
stages:
  - intro
  - clear
  - clone
  - build
  - environment
  - compile
  - install
  - setup
  - test
  - history
  - generate
  - upload
  - deploy


variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/pip-cache"


telegram_job:
  stage: intro
  tags:
    - android-host
  before_script:
    - python3 telegram_bot/starter.py start
  script:
    - python3 -m pip install virtualenv
    - python3 -m venv env --without-pip
    - source env/bin/activate
  after_script:
    - python3 telegram_bot/client.py -n telegram_job

clear_job:
  stage: clear
  tags:
    - android-host
  before_script:
    - adb -s localhost:5555 emu kill || true
    - adb kill-server || true
  script:
    - echo $ANDROID_HOST_PASSWORD | sudo -S killall appium || true
    - echo $ANDROID_HOST_PASSWORD | sudo -S killall java || true
    - yes | rm -r ./app && mkdir ./app || mkdir ./app || true
  after_script:
    - adb start-server
    - python3 telegram_bot/client.py -n clear_job

app_job:
  stage: clone
  tags:
    - android-host
  variables:
    PROJECT_REPO: "git@gitlab.rambler.ru:android-dev/kassa-2.git"
  before_script:
    - eval "$(ssh-agent -s)"
    - echo $ANDROID_HOST_PASSWORD | chmod 777 ./ssh_substitution.sh
    - DISPLAY=1 SSH_ASKPASS="./ssh_substitution.sh" ssh-add ~/.ssh/id_rsa < /dev/null
    - yes | rm -r ./project && mkdir ./project || mkdir ./project || true
  script:
    - git clone --branch develop $PROJECT_REPO project
    - touch project/local.properties
    - echo sdk.dir=/home/npermyakov/Android/Sdk > project/local.properties
  after_script:
    - echo $ANDROID_HOST_PASSWORD | sudo -S killall ssh-agent
    - python3 telegram_bot/client.py -n app_job
  cache:
    untracked: true
    key: cache
    paths:
      - ./project
    policy: push
  retry: 2
  rules:
    - if: '$WITHOUT_TESTS != "true"'

build_job:
  stage: build
  trigger:
    include:
      - local: .build-stage.yml

logging_job:
  stage: build
  trigger:
    include:
      - local: .logging-stage.yml

appium_job:
  stage: environment
  trigger:
    include:
      - local: .appium-stage.yml

postgres_job:
  stage: environment
  trigger:
    include:
      - local: .postgres-stage.yml

compile_job:
  stage: compile
  tags:
    - android-host
  before_script:
    - export ANDROID_HOME=$HOME/Android/Sdk
    - export PATH=$PATH:$ANDROID_HOME/tools
    - export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/
  script:
    - echo $ANDROID_HOST_PASSWORD | chmod 777 ./bootanim.sh || true
    - ./bootanim.sh
    - echo $ANDROID_HOST_PASSWORD | chmod 777 ./compile_app.sh || true
    - ./compile_app.sh
  after_script:
    - python3 telegram_bot/client.py -n compile_job
  artifacts:
    when: always
    paths:
      - ./app/app-kassa-debug.apk
    expire_in: 3 days
  cache:
    untracked: true
    key: cache
    paths:
      - ./project
    policy: pull
  rules:
    - if: '$WITHOUT_TESTS != "true"'

install_job:
  stage: install
  tags:
    - android-host
  script:
    - echo $ANDROID_HOST_PASSWORD | sudo -S apt-get update || true
    - echo $ANDROID_HOST_PASSWORD | sudo -S adb install ./app/app-kassa-debug.apk || true
  after_script:
    - python3 telegram_bot/client.py -n install_job
  artifacts:
    when: always
    paths:
      - ./app/app-kassa-debug.apk
    expire_in: 3 days
  rules:
    - if: '$WITHOUT_TESTS != "true"'

setup_job:
  stage: setup
  tags:
    - android-host
  script:
    - python3 -m pip install wheel
    - python3 -m pip install -r requirements.txt
    - python3 -m pip install Pillow
  after_script:
    - python3 telegram_bot/client.py -n setup_job
  cache:
    untracked: true
    key: ${CI_JOB_NAME}
    paths:
      - "$CI_PROJECT_DIR/pip-cache"

pytest_job:
  stage: test
  tags:
    - android-host
  before_script:
    - rm -r ./allure-results && mkdir ./allure-results || mkdir ./allure-results || true
    - echo $ANDROID_HOST_PASSWORD | sudo -S killall java || true
  script:
    - echo $ANDROID_HOST_PASSWORD | sudo -S chmod 777 ./app/app-kassa-debug.apk
    - DISPLAY=:0 xterm -e 'python3 -m pytest -v -s -l --tb=short ./tests --alluredir=./allure-results --cov=./app --host'
    - coverage xml
  after_script:
    - adb -s emulator-5554 emu kill
    - adb kill-server
    - killall node || true
    - python3 telegram_bot/client.py -n pytest_job
  artifacts:
    when: always
    paths:
      - ./allure-results
    expire_in: 3 days
    reports:
      cobertura: coverage.xml
  allow_failure: true
  rules:
    - if: '$WITHOUT_TESTS != "true"'

history_job:
  stage: history
  tags:
    - android-host
  before_script:
    - mkdir -p ./public/history || true
  script:
    - "curl  --location --output history.zip --request GET --header \"PRIVATE-TOKEN: $PRIVATE-TOKEN\" \"https://gitlab.rambler.ru/api/v4/projects/6933/jobs/artifacts/master/download?job=pages\" || true"
    - unzip history.zip || true
    - cp -r ./public/history/ ./allure-results/history || true
    - ls ./allure-results/history  # TODO: dbg
  after_script:
    - python3 telegram_bot/client.py -n history_job
  artifacts:
    when: always
    paths:
      - ./allure-results
    expire_in: 3 days
  cache:
    untracked: true
    key: cache
    paths:
      - ./allure-results
    policy: push

generate_job:
  stage: generate
  tags:
    - android-host
  before_script:
    - rm -r ./allure-report && mkdir ./allure-report || mkdir ./allure-report || true
  script:
    - allure generate -c ./allure-results -o ./allure-report
  after_script:
    - python3 telegram_bot/client.py -n generate_job
  artifacts:
    when: always
    paths:
      - ./allure-report
      - ./allure-results
    expire_in: 3 days
  cache:
    untracked: true
    key: cache
    paths:
      - ./allure-results
    policy: pull

docker_job:
  stage: generate
  trigger:
    include:
      - local: .docker-stage.yml

upload_job:
  stage: upload
  tags:
    - android-host
  image: kochetkovma/allure-server:latest
  before_script:
    - rm -r ./allure-results.zip || true
  script:
    - zip -r allure-results.zip ./allure-results
    - 'response=$(curl -X POST http://10.60.21.50:8080/api/result -H  "Content-Type: multipart/form-data"  -F "allureResults=@allure-results.zip;type=application/x-zip-compressed")'
    - python3 telegram_bot/client.py -r \"${response:41:36}\"
    - |
      curl --location --request POST "http://localhost:8080/api/report" \
      --header "Content-Type: application/json" \
      --data-raw "{\"reportSpec\": { \"path\": [ \"last\", \"${response:41:36}\" ], \"executorInfo\": { \"buildName\": \"${response:41:36}\" } }, \"results\": [ \"${response:41:36}\" ], \"deleteResults\": false}"
    - python3 jira_pipeline.py \"${response:41:36}\"
  after_script:
    - python3 telegram_bot/client.py -n upload_job
  cache:
    untracked: true
    key: cache
    paths:
      - ./allure-results
    policy: pull
  allow_failure: true
  rules:
    - if: '$WITHOUT_TESTS != "true"'

pages:
  stage: deploy
  tags:
    - android-host
  before_script:
    - rm -r ./public && mkdir ./public || mkdir ./public || true
  script:
    - mv ./allure-report/* ./public || true
  after_script:
    - python3 telegram_bot/client.py -n pages
  artifacts:
    when: always
    paths:
      - public
    expire_in: 10 days
